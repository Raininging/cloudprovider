server:
    port: 8080
spring:
    application:
        name: demo-provider
    #数据源
    datasource:
        name: demo-mbd-provider
        url: jdbc:mysql://172.19.92.75:3306/train_mbd?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&useSSL=false
        username: mbd
        password: 123456
        #Mysql驱动
        driver-class-name: com.mysql.jdbc.Driver
        #下面是阿里开源数据库连接池的配置：
        #初始化连接池数量
        initialSize: 5
        #最小连接池数量
        minIdle: 5
        #最大连接池数量
        maxActive: 10
        #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降， 
        #如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
        maxWait: 60000
        #有两个含义： 
        #1) Destroy线程会检测连接的间隔时间
        #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
        timeBetweenEvictionRunsMillis: 60000
        #配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        #用来检测连接是否有效的sql，要求是一个查询语句。
        #如果validationQuery为null，testOnBorrow、testOnReturn、 
        #testWhileIdle都不会其作用。
        validationQuery: select 'x'
        #建议配置为true，不影响性能，并且保证安全性。
        #申请连接的时候检测，如果空闲时间大于 
        #timeBetweenEvictionRunsMillis， 
        #执行validationQuery检测连接是否有效。
        testWhileIdle: true
        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnBorrow: false
        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnReturn: false
        #是否缓存preparedStatement，也就是PSCache。 
        #PSCache对支持游标的数据库性能提升巨大，比如说oracle。
        #在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
        #作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，
        #该应该是支持PSCache。
        poolPreparedStatements: true
        #要启用PSCache，必须配置大于0，当大于0时
        #poolPreparedStatements自动触发修改为true。 
        #在Druid中， 不会存在Oracle下PSCache占用内存过多的问题， 
        #可以把这个数值配置大一些，比如说100
        maxOpenPreparedStatements: 20
        #属性类型是字符串，通过别名的方式配置扩展插件， 
        #常用的插件有： 监控统计用的filter:stat、日志用的filter:log4j、防御sql注入的filter:wall
        filters: stat
        #web控制台
        manager:
            #web控制台的地址如，http://localhost/druid
            url: /druid/*
            #web控制台登录名
            username: druid
            #web控制台密码
            password: 123456

    #Redis缓存配置
    redis:
        #服务器地址
        host: 172.19.92.75
        #端口
        port: 6379
        #密码
        password: 
        #连接超时时间（毫秒）
        timeout: 0
        #下面是连接池配置：
        pool:
            #连接池最大连接数（使用负值表示没有限制），默认8
            max-active: 8
            #连接池最大阻塞等待时间（使用负值表示没有限制）
            max-wait: 10000
            #连接池中的最大空闲连接，默认8
            max-idle: 8
            #连接池中的最小空闲连接，默认0
            min-idle: 0

#服务治理
eureka:
    #客户端
    client:
        #健康检查
        healthcheck:
            #是否开启健康检查
            enabled: true
        #注册中心地址
        serviceUrl:
            #默认地址
            defaultZone: http://localhost:6661/eureka/
    #实例配置
    instance:
        #发呆时间，即服务续约到期时间（缺省为90s）
        #Eureka服务器在接收到实例 的最后一次发出的心跳后，需要等待多久才可以将此实例删除
        lease-expiration-duration-in-seconds: 9
        #表示eureka client发送心跳给server端的频率,默认为30 秒
        #如果在lease-expiration-duration-in-seconds后，server端没有收到client的心跳，则将摘除该instance
        #除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量
        lease-renewal-interval-in-seconds: 3
        #指定用ip访问而不是用主机名
        prefer-ip-address: true
        #指定真实的ip地址
        ip-address: ${spring.cloud.client.ipAddress}
        #指定在注册中心Status列显示的信息
        instance-id: ${eureka.instance.ip-address}:${server.port}:${spring.application.name}

#服务保护配置
hystrix:  
    command:
        default:
            execution:
                isolation:
                    thread:
                        #调用服务超时时间，毫秒
                        timeoutInMilliseconds: 50000
